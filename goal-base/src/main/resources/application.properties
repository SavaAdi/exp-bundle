# This affects the JAR artifact thatï¿½s produced by Maven
quarkus.application.name=goal-base

quarkus.http.port=8080

# drop and create the database at startup (use `update` to only update the schema)
# TODO use Docker volumes and refactor this to validate. Also maybe add flyway/liquidbase
quarkus.hibernate-orm.database.generation = drop-and-create

# docker run --ulimit memlock=-1:-1 --memory-swappiness=0 --name postgres-quarkus-goal -e POSTGRES_USER=hibernate -e POSTGRES_PASSWORD=hibernate -e POSTGRES_DB=goal-database -p 5432:5432 postgres:13.0-alpine
# configure your datasource
quarkus.datasource.db-kind=postgresql
quarkus.datasource.reactive.url=postgresql://localhost:5432/goal-database
# TODO override this with k8 secrets or vault secrets
quarkus.datasource.username=hibernate
quarkus.datasource.password=hibernate

# This is the container-friendly default. Allows this
# microservice to listen on any network interface
quarkus.http.host=0.0.0.0

quarkus.log.level=FINE
quarkus.log.category."org.hibernate".level=DEBUG

# http://localhost:16686 Jaeger UI
quarkus.jaeger.service-name=${quarkus.application.name}
quarkus.jaeger.sampler-type=const
quarkus.jaeger.sampler-param=1
quarkus.jaeger.endpoint=http://localhost:14268/api/traces


